# GitHub Actions CI 工作流配置
# 用于自动化测试、代码格式检查和代码质量检查

name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings

jobs:
  test:
    name: 测试
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
        include:
          - rust: stable
            toolchain: stable
          - rust: beta
            toolchain: beta
          - rust: nightly
            toolchain: nightly

    steps:
      - uses: actions/checkout@v4

      - name: 安装 Rust 工具链
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy

      - name: 缓存依赖
        uses: Swatinem/rust-cache@v2

      - name: 检查代码格式
        run: cargo fmt --all -- --check

      - name: 运行 Clippy
        run: cargo clippy --all-targets --all-features

      - name: 运行测试
        run: cargo test --all-features

      - name: 运行文档测试
        run: cargo test --doc

  coverage:
    name: 代码覆盖率
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: 安装 Rust 工具链
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: llvm-tools-preview

      - name: 安装 cargo-llvm-cov
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-llvm-cov

      - name: 生成覆盖率报告
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: 上传覆盖率报告
        uses: codecov/codecov-action@v3
        with:
          file: ./lcov.info
          fail_ci_if_error: true

  audit:
    name: 安全审计
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: 安装 Rust 工具链
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: 运行安全审计
        run: cargo audit

  bench:
    name: 基准测试
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - uses: actions/checkout@v4

      - name: 安装 Rust 工具链
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: 缓存依赖
        uses: Swatinem/rust-cache@v2

      - name: 运行基准测试
        run: cargo bench --no-run

      - name: 保存基准测试结果
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: target/criterion
